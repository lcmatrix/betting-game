buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.0.4.RELEASE"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.0.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.6.RELEASE'
    id 'org.flywaydb.flyway' version '5.1.4'
    //id "com.gorylenko.gradle-git-properties" version "1.4.17"
    id 'checkstyle'
    id 'pmd'
    id 'findbugs'
    id 'idea'
    id 'eclipse'
}

repositories {
  jcenter()
}

apply from: 'flyway.gradle'
apply from: 'codestyle.gradle'

group = 'de.betting-game'
version = '0.1.0'
description = "Root project for betting game"

sourceCompatibility = 10

bootRun {
    sourceResources sourceSets.main
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-devtools")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'

    compile group: 'org.flywaydb', name: 'flyway-core', version: '5.1.4'
    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.2.6'
    compile group: 'org.hibernate', name: 'hibernate-java8'
    compile "javax.xml.bind:jaxb-api"
    // both variants are possible to declare dependencies
    compile("org.thymeleaf.extras:thymeleaf-extras-springsecurity4:3.0.2.RELEASE")

    runtime("org.springframework.boot:spring-boot-properties-migrator")

    testCompile("org.springframework.boot:spring-boot-starter-test")
}


task gitversion(type: Exec) {
    commandLine 'git', 'describe'
    standardOutput = new ByteArrayOutputStream()
    ext.version = {
        return standardOutput.toString()
    }
}

exec {
    commandLine 'git', 'describe'
    standardOutput = new ByteArrayOutputStream()
    ext.gitversion = {
      return standardOutput.toString()
    }
}

logger.quiet("Current Git version: {}", gitversion())

processResources {
    from sourceSets.main.resources.srcDirTrees
    include '**/*'
    filter org.apache.tools.ant.filters.ReplaceTokens, tokens: ['version.tag': gitversion()]
}
