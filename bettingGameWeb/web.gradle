/*buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.4.RELEASE"
    }
}*/

plugins {
    id 'java'
    id 'org.springframework.boot' version '1.5.8.RELEASE'
    //id "com.gorylenko.gradle-git-properties" version "1.4.17"
    id 'checkstyle'
    id 'pmd'
    id 'findbugs'
}

group 'de.betting-game'
version = '0.1.0'
description = "WebApp betting game"

// due to spring dependency management plugin it is possible to define/overwrite version properties of dependencies
/*ext['spring-boot.version'] = '1.5.3.RELEASE'
ext['thymeleaf.version'] = '3.0.5.RELEASE'
ext['thymeleaf-spring4.version'] = '3.0.5.RELEASE'
ext['thymeleaf-layout-dialect.version'] = '2.2.1'
*/



checkstyle {
    configFile = file("$rootProject.projectDir/config/checkstyle/checkstyle.xml")
    ignoreFailures = true
}


tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet resources.text.fromFile("$rootProject.projectDir/config/checkstyle/checkstyle-noframes-severity-sorted.xsl")
    }
    
    onlyIf {
        project.hasProperty("withChecks") && withChecks == "true"
    }
}

findbugs {
    ignoreFailures = true
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet resources.text.fromFile("$rootProject.projectDir/config/findbugs/default.xsl")
    }

    onlyIf {
        project.hasProperty("withChecks") && withChecks == "true"
    }
}

pmd {
    ignoreFailures true
    //ruleSets = ["basic", "braces", "unnecessary", "unusedcode"]
    ruleSetFiles = files("$rootProject.projectDir/config/pmd/ruleset.xml")

}

tasks.withType(Pmd) {
    onlyIf {
        hasProperty("withChecks") && withChecks == "true"
    }
}



bootRun {
    addResources = true
}

dependencies {
    compile project(":model")

    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-devtools")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-actuator")

    // both variants are possible to declare dependencies
    compile group: 'org.thymeleaf', name: 'thymeleaf', version: '3.0.7.RELEASE'
    compile("org.thymeleaf:thymeleaf-spring4:3.0.7.RELEASE")
    compile group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '2.2.2'

    testCompile("org.springframework.boot:spring-boot-starter-test")
}